enum ProjectType {
    RESIDENTIAL_CONSTRUCTION
    HEAVY_CONSTRUCTION
    INDUSTRIAL_CONSTRUCTION
    COMMERTIAL_CONSTRUCTION
}

enum ProjectStatus {
    ACCEPTED
    PENDING
    REJECTED
}

enum UserRole {
    ADMIN
    USER
}

enum UserStatus {
    NORMAL
    BANNED
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = []
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id                     String     @id @default(cuid())
    name                   String     @default("")
    email                  String?    @unique
    role                   UserRole   @default(USER)
    status                 UserStatus @default(NORMAL)
    emailVerified          DateTime?
    image                  String?
    accounts               Account[]
    sessions               Session[]
    contractorRoleProjects Project[]  @relation(name: "ContractorRoleProjectRelation")
    consultantRoleProjects Project[]  @relation(name: "ConsultantRoleProjectRelation")
    managerRoleProjects    Site[]     @relation(name: "ManagerRoleProjectRelation")
    ownerRoleProjects      Project[]  @relation(name: "OwnerRoleProjectRelation")
    createdAt              DateTime   @default(now())
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Project {
    id           String        @id @default(cuid())
    name         String        @db.VarChar(255)
    description  String        @db.VarChar(255)
    type         ProjectType   @default(RESIDENTIAL_CONSTRUCTION)
    status       ProjectStatus @default(PENDING)
    contractor   User          @relation(name: "ContractorRoleProjectRelation", fields: [contractorId], references: [id])
    contractorId String        @db.VarChar(255)
    consultant   User          @relation(name: "ConsultantRoleProjectRelation", fields: [consultantId], references: [id])
    consultantId String        @db.VarChar(255)
    owner        User          @relation(name: "OwnerRoleProjectRelation", fields: [ownerId], references: [id])
    ownerId      String        @db.VarChar(255)
    sites        Site[]        @relation(name: "ProjectSiteRelation")
    startDate    DateTime      @default(now())
    endDate      DateTime
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt

    @@index([contractorId])
    @@index([consultantId])
    @@index([ownerId])
}

model Site {
    id        String     @id @default(cuid())
    name      String     @db.VarChar(255)
    location  String     @db.VarChar(255)
    tasks     Task[]     @relation(name: "SiteTasksRelation")
    manager   User       @relation(name: "ManagerRoleProjectRelation", fields: [managerId], references: [id])
    managerId String     @db.VarChar(255)
    project   Project    @relation(name: "ProjectSiteRelation", fields: [projectId], references: [id])
    projectId String     @db.VarChar(255)
    materials Material[] @relation(name: "SiteMaterialRelation")
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt

    @@index([managerId])
    @@index([projectId])
}

model Task {
    id        String   @id @default(cuid())
    name      String   @db.VarChar(255)
    detail    String   @db.VarChar(255)
    site      Site     @relation(name: "SiteTasksRelation", fields: [siteId], references: [id])
    siteId    String   @db.VarChar()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([siteId])
}

model Material {
    id        String   @id @default(cuid())
    name      String   @db.VarChar(255)
    amount    Float
    unit      String   @db.VarChar(255)
    site      Site     @relation(name: "SiteMaterialRelation", fields: [siteId], references: [id])
    siteId    String   @db.VarChar(255)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([siteId])
}
